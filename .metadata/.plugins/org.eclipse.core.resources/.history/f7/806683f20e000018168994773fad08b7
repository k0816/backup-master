package cycle.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import cycle.dto.PartySearchDTO;
import cycle.util.DBConnector;

public String partyCapacity;
public String partyPrice;
public String partyPlace;

public class PartySearchResultDAO {
	public ArrayList<PartySearchDTO> partySearchDTOList = new ArrayList<PartySearchDTO>();

	public ArrayList<PartySearchDTO> search(String partyCapacity, String partyPrice, String partyPlace) {
		DBConnector db = new DBConnector();
		Connection con = db.getConnection();

		String sql = "SELECT * FROM party_info WHERE (party_capacity BETWEEN ? AND ? "
				+ "AND party_price BETWEEN ? AND ? "
				+ "AND party_place=? ) IS NOT FALSE";

	    try{
	    	PreparedStatement ps = con.prepareStatement(sql);
	    	ps.setString(1, partyCapacity);
	    	ps.setString(2, partyCapacity);
			ps.setString(3, partyPrice);
			ps.setString(4, partyPrice);
			ps.setString(5, partyPlace);

			ResultSet rs = ps.executeQuery();

			while(rs.next()) {
				PartySearchDTO partySearchDTO = new PartySearchDTO();
				partySearchDTO.setPartyId(rs.getString("party_id"));
				partySearchDTO.setPartyName(rs.getString("party_name"));
				partySearchDTO.setPartyDate(rs.getDate("party_date"));
				partySearchDTO.setPartyPrice(rs.getString("party_price"));
				partySearchDTO.setPartyCapacity(rs.getString("party_capacity"));
				partySearchDTO.setPartyPlace(rs.getString("party_place"));
				partySearchDTO.setAgeMinimum(rs.getString("age_minimum"));
				partySearchDTO.setAgeMaximum(rs.getString("age_maximum"));
				partySearchDTO.setPartyDetail(rs.getString("party_detail"));
				partySearchDTO.setInsertDate(rs.getDate("insert_date"));
				partySearchDTO.setUpdateDate(rs.getDate("update_date"));
				partySearchDTOList.add(partySearchDTO);

	    }

		} catch(SQLException e) {
			e.printStackTrace();

		}

		try {
			con.close();

		} catch(SQLException e) {
			e.printStackTrace();

		}

		return partySearchDTOList;
	}

	public ArrayList<PartySearchDTO> getPartySearchDTOList() {
		return partySearchDTOList;
	}


	public void setPartySearchDTOList(ArrayList<PartySearchDTO> partySearchDTOList) {
		this.partySearchDTOList = partySearchDTOList;
	}


}
